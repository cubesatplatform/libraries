#include "radio.h"

const char * CRadio::errorDescription(int err){
if(err==0)return("RADIOLIB_ERR_NONE");                                      
if(err==-1)return("RADIOLIB_ERR_UNKNOWN");                                   
if(err==-2)return("RADIOLIB_ERR_CHIP_NOT_FOUND");                            
if(err==-3)return("RADIOLIB_ERR_MEMORY_ALLOCATION_FAILED");                  
if(err==-4)return("RADIOLIB_ERR_PACKET_TOO_LONG");                           
if(err==-5)return("RADIOLIB_ERR_TX_TIMEOUT");                                
if(err==-6)return("RADIOLIB_ERR_RX_TIMEOUT");                                
if(err==-7)return("RADIOLIB_ERR_CRC_MISMATCH");                              
if(err==-8)return("RADIOLIB_ERR_INVALID_BANDWIDTH");                         
if(err==-9)return("RADIOLIB_ERR_INVALID_SPREADING_FACTOR");                  
if(err==-10)return("RADIOLIB_ERR_INVALID_CODING_RATE");                       
if(err==-11)return("RADIOLIB_ERR_INVALID_BIT_RANGE");                         
if(err==-12)return("RADIOLIB_ERR_INVALID_FREQUENCY");                         
if(err==-13)return("RADIOLIB_ERR_INVALID_OUTPUT_POWER");                      
if(err==-14)return("RADIOLIB_PREAMBLE_DETECTED");                             
if(err==-15)return("RADIOLIB_CHANNEL_FREE");                                  
if(err==-16)return("RADIOLIB_ERR_SPI_WRITE_FAILED");                          
if(err==-17)return("RADIOLIB_ERR_INVALID_CURRENT_LIMIT");                     
if(err==-18)return("RADIOLIB_ERR_INVALID_PREAMBLE_LENGTH");                   
if(err==-19)return("RADIOLIB_ERR_INVALID_GAIN");                              
if(err==-20)return("RADIOLIB_ERR_WRONG_MODEM");                               
if(err==-21)return("RADIOLIB_ERR_INVALID_NUM_SAMPLES");                       
if(err==-22)return("RADIOLIB_ERR_INVALID_RSSI_OFFSET");                       
if(err==-23)return("RADIOLIB_ERR_INVALID_ENCODING");                          
if(err==-24)return("RADIOLIB_ERR_LORA_HEADER_DAMAGED");                       
if(err==-101)return("RADIOLIB_ERR_INVALID_BIT_RATE");                          
if(err==-102)return("RADIOLIB_ERR_INVALID_FREQUENCY_DEVIATION");               
if(err==-103)return("RADIOLIB_ERR_INVALID_BIT_RATE_BW_RATIO");                 
if(err==-104)return("RADIOLIB_ERR_INVALID_RX_BANDWIDTH");                      
if(err==-105)return("RADIOLIB_ERR_INVALID_SYNC_WORD");                         
if(err==-106)return("RADIOLIB_ERR_INVALID_DATA_SHAPING");                      
if(err==-107)return("RADIOLIB_ERR_INVALID_MODULATION");                        
if(err==-108)return("RADIOLIB_ERR_INVALID_OOK_RSSI_PEAK_TYPE");                
if(err==-201)return("RADIOLIB_ERR_INVALID_SYMBOL");                            
if(err==-401)return("RADIOLIB_ERR_INVALID_RTTY_SHIFT");                        
if(err==-402)return("RADIOLIB_ERR_UNSUPPORTED_ENCODING");                      
if(err==-501)return("RADIOLIB_ERR_INVALID_DATA_RATE");                         
if(err==-502)return("RADIOLIB_ERR_INVALID_ADDRESS_WIDTH");                     
if(err==-503)return("RADIOLIB_ERR_INVALID_PIPE_NUMBER");                       
if(err==-504)return("RADIOLIB_ERR_ACK_NOT_RECEIVED");                          
if(err==-601)return("RADIOLIB_ERR_INVALID_NUM_BROAD_ADDRS");                   
if(err==-701)return("RADIOLIB_ERR_INVALID_CRC_CONFIGURATION");                 
if(err==-702)return("RADIOLIB_LORA_DETECTED");                                 
if(err==-703)return("RADIOLIB_ERR_INVALID_TCXO_VOLTAGE");                      
if(err==-704)return("RADIOLIB_ERR_INVALID_MODULATION_PARAMETERS");             
if(err==-705)return("RADIOLIB_ERR_SPI_CMD_TIMEOUT");                           
if(err==-706)return("RADIOLIB_ERR_SPI_CMD_INVALID");                           
if(err==-707)return("RADIOLIB_ERR_SPI_CMD_FAILED");                            
if(err==-708)return("RADIOLIB_ERR_INVALID_SLEEP_PERIOD");                      
if(err==-709)return("RADIOLIB_ERR_INVALID_RX_PERIOD");                         
if(err==-801)return("RADIOLIB_ERR_INVALID_CALLSIGN");                          
if(err==-802)return("RADIOLIB_ERR_INVALID_NUM_REPEATERS");                     
if(err==-803)return("RADIOLIB_ERR_INVALID_REPEATER_CALLSIGN");                 
if(err==-901)return("RADIOLIB_ERR_RANGING_TIMEOUT");
return "invalid code";
}                           
